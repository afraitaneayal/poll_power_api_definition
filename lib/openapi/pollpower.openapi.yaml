openapi: 3.0.2
info:
    title: poll_power
    version: '1.4'
    description: >-
        This is a little school project, a voting app allowing users to choose their preferred candidate and
        see real-time results.
    contact:
        name: Yaya HC
        url: 'https://github.com/yayahc'
        email: Hamedcuenca5@gmail.com
    license:
        name: MIT License
        url: 'https://opensource.org/licenses/MIT'
servers:
    -
        url: 'http://localhost:8080'
        description: ''
paths:
    /v1/:
        summary: Base path
        get:
            responses:
                '200':
                    content:
                        text/xml:
                            schema:
                                type: string
                    description: Welcome
            operationId: GetBasePath
    /v1/auth/login:
        summary: Login path
        description: Login path for both user and candidate
        post:
            requestBody:
                description: Informations user should send first
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserLoginRequest'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWTresponse'
                    description: Login succesfuly trigger
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: User send bad request like v1/auth/login with get methode
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal server error
            operationId: LoginUser
            summary: Post methode for loggin
            description: Post methode that allow user to send thier info and get their credentials
    /v1/candidates:
        description: This path allow getting all available candidates
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                    description: Successfuly got candidates
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized user
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal server error
            security:
                -
                    JWT: []
            operationId: GetCandidates
            summary: Get method
    /v1/votes:
        summary: Path to vote a candidate
        post:
            requestBody:
                description: Voting request to be send by user
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VotingRequest'
                required: true
            responses:
                '200':
                    description: Successfuly voted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Candidate not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal server error
            security:
                -
                    JWT: []
            operationId: VoteCandidate
            summary: Post methot for voting
    /v1/ws:
        get:
            responses:
                '200':
                    description: WS connected
            operationId: Subscribe
    /v1/auth/signup/user:
        post:
            requestBody:
                description: Request to create new user
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User successfuly created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal server error
            operationId: SignUpUser
            summary: Post method to create new user
            description: Post method to create new user and return their access
    /v1/auth/signup/candidate:
        post:
            requestBody:
                description: Request to signup new candidate
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Candidate'
                required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Candidate'
                    description: User successfuly created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal server error
            operationId: SignUpCandidate
            summary: Post method to create new candidate
            description: Post method to create new user and return their access
components:
    schemas:
        User:
            title: Root Type for User
            description: This is a definition of user in the system
            required:
                - area_of_study
                - email
                - first_name
                - grade
                - last_name
                - password                
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
                first_name:
                    type: string
                last_name:
                    type: string
                grade:
                    type: string
                area_of_study:
                    type: string
                image:
                    type: string               
            example:
                email: ''
                password: ''
                first_name: ''
                last_name: ''
                grade: ''
                area_of_study: ''
                image: ''
        Candidate:
            title: Root Type for Candidate
            description: |-
                This is a definition for candidate in system It's contain different data betwen candidate and user as a candidate is a user first
            required:
                - slogan
                - vote_count
                - id
                - user
            type: object
            properties:
                slogan:
                    type: string
                speech:
                    type: string
                vote_count:
                    description: Candidate vote count
                    type: integer
                id:
                    description: ''
                    type: string
                user:
                    $ref: '#/components/schemas/User'
                    description: ''
            example:
                slogan: ''
                speech: ''
        UserLoginRequest:
            title: Root Type for UserLoginRequest
            description: Request to be send by user for loggin
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
            example:
                email: ''
                password: ''
        Error:
            title: Root Type for Error
            description: 'Base error response '
            type: object
            properties:
                error:
                    type: object
                    properties:
                        devMessage:
                            type: string
                        userFriendlyMessage:
                            type: string
            example:
                error:
                    devMessage: ''
                    userFriendlyMessage: ''
        JWTresponse:
            title: Root Type for JWTresponse
            description: JWT response that contain token and refresh token
            required:
                - refresh_token
                - token
                - key
            type: object
            properties:
                token:
                    type: string
                refresh_token:
                    type: string
                key:
                    description: Kay that will be use by server to ensure that sender is allow
                    type: string
            example:
                token: ''
                refresh_token: ''
        VotingRequest:
            title: Root Type for VotingRequest
            description: ''
            required:
                - id
            type: object
            properties:
                candidate_id:
                    type: string
                voted_at:
                    type: string
                user_id:
                    type: string
                id:
                    description: ''
                    type: string
            example:
                candidate_id: ''
                voted_at: ''
                user_id: ''
    securitySchemes:
        JWT:
            scheme: bearer
            type: http
            description: Json Web Token base security
security:
    -
        JWT: []            
tags:
    -
        name: v1
        description: First version of the specification
    -
        name: v1.2
        description: Some base HTTP method requirements fixed
